        </div>
    </footer>

    <script>
        let selectedMood = null;
        let moodIntensity = 5;

        function selectMood(mood, element) {
            // Remove previous selection
            document.querySelectorAll('.mood-card').forEach(card => {
                card.classList.remove('selected', 'ring-4', 'ring-warm-orange');
            });

            // Add selection to clicked card
            element.classList.add('selected', 'ring-4', 'ring-warm-orange');
            
            selectedMood = mood;
            
            // Show slider and enable button with animation
            const slider = document.getElementById('moodSlider');
            slider.classList.remove('hidden');
            
            const button = document.getElementById('findTripsBtn');
            button.disabled = false;
            button.classList.add('pulse-glow');
            
            // Update selected mood text
            document.getElementById('selectedMoodText').textContent = mood + ' mood';
            
            // Add some haptic-like feedback
            element.style.transform = 'translateY(-4px) scale(1.05)';
            setTimeout(() => {
                if (element.classList.contains('selected')) {
                    element.style.transform = 'translateY(-4px) scale(1.05)';
                }
            }, 150);
        }

        function findTrips() {
            if (!selectedMood) return;
            
            // Get mood intensity
            const intensitySlider = document.querySelector('input[type="range"]');
            moodIntensity = intensitySlider.value;
            
            // Hide hero section and show results with smooth transition
            const heroSection = document.querySelector('section.gradient-bg');
            const resultsSection = document.getElementById('resultsSection');
            
            heroSection.style.transition = 'opacity 0.5s ease-out';
            heroSection.style.opacity = '0';
            
            setTimeout(() => {
                heroSection.style.display = 'none';
                resultsSection.classList.remove('hidden');
                resultsSection.style.opacity = '0';
                resultsSection.style.transition = 'opacity 0.5s ease-in';
                
                setTimeout(() => {
                    resultsSection.style.opacity = '1';
                }, 50);
                
                // Smooth scroll to results
                resultsSection.scrollIntoView({ 
                    behavior: 'smooth' 
                });
            }, 500);
            
            // Update results based on selected mood
            updateRecommendations(selectedMood, moodIntensity);
        }

        function updateRecommendations(mood, intensity) {
            // This would connect to your AI recommendation engine
            // For now, we'll just update the display text
            console.log(`Finding ${mood} experiences with intensity ${intensity}/10`);
            
            // You could dynamically filter/sort experiences based on mood here
            const moodColors = {
                'calm': 'calm-blue',
                'adventurous': 'adventure-orange',
                'romantic': 'romantic-pink',
                'creative': 'creative-purple',
                'social': 'social-yellow',
                'celebrate': 'celebrate-red'
            };
            
            // Update mood badges to match selected mood
            document.querySelectorAll('.bg-calm-blue\\/20').forEach(badge => {
                const colorClass = moodColors[mood] || 'calm-blue';
                badge.className = `bg-${colorClass}/20 text-${colorClass} px-3 py-1 rounded-full text-xs font-medium`;
            });
        }

        function showMoreExperiences() {
            // Placeholder for loading more experiences
            alert('More amazing experiences coming soon! 🌍✨');
        }

        // Add interactive animations and effects
        document.addEventListener('DOMContentLoaded', function() {
            // Smooth scroll for anchor links
            document.querySelectorAll('a[href^="#"]').forEach(anchor => {
                anchor.addEventListener('click', function (e) {
                    e.preventDefault();
                    const target = document.querySelector(this.getAttribute('href'));
                    if (target) {
                        target.scrollIntoView({
                            behavior: 'smooth',
                            block: 'start'
                        });
                    }
                });
            });

            // Add loading states for buttons
            document.querySelectorAll('button').forEach(button => {
                if (button.textContent.includes('Plan This Trip')) {
                    button.addEventListener('click', function() {
                        const originalText = this.textContent;
                        this.textContent = 'Planning... ✨';
                        this.disabled = true;
                        
                        setTimeout(() => {
                            alert('Trip planning feature coming soon! 🧳');
                            this.textContent = originalText;
                            this.disabled = false;
                        }, 1500);
                    });
                }
            });

            // Waitlist functionality
            const waitlistButton = document.querySelector('button:contains("Join Waitlist")');
            if (waitlistButton) {
                waitlistButton.addEventListener('click', function() {
                    const email = document.querySelector('input[type="email"]').value;
                    if (email) {
                        alert(`Thanks for joining our waitlist! We'll email ${email} when WanderMood launches 🎉`);
                    } else {
                        alert('Please enter your email address to join the waitlist 📧');
                    }
                });
            }

            // Add fade-in animation to elements as they come into view
            const observerOptions = {
                threshold: 0.1,
                rootMargin: '0px 0px -50px 0px'
            };

            const observer = new IntersectionObserver((entries) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        entry.target.style.opacity = '1';
                        entry.target.style.transform = 'translateY(0)';
                    }
                });
            }, observerOptions);

            // Observe elements for fade-in animation
            document.querySelectorAll('.fade-in').forEach(el => {
                el.style.opacity = '0';
                el.style.transform = 'translateY(30px)';
                el.style.transition = 'opacity 0.6s ease-out, transform 0.6s ease-out';
                observer.observe(el);
            });
        });

        // Add some Easter eggs and delightful interactions
        let clickCount = 0;
        document.querySelector('.floating-animation').addEventListener('click', function() {
            clickCount++;
            if (clickCount === 5) {
                this.style.transform = 'rotate(360deg) scale(1.2)';
                setTimeout(() => {
                    this.style.transform = '';
                    alert('🎉 You found the secret! WanderMood loves curious travelers like you!');
                    clickCount = 0;
                }, 500);
            }
        });

        // Keyboard shortcuts for power users
        document.addEventListener('keydown', function(e) {
            // Press 'M' to focus on mood selection
            if (e.key === 'm' || e.key === 'M') {
                e.preventDefault();
                document.querySelector('.mood-card').focus();
            }
            
            // Press 'F' to trigger find trips (if mood selected)
            if (e.key === 'f' || e.key === 'F') {
                e.preventDefault();
                const button = document.getElementById('findTripsBtn');
                if (!button.disabled) {
                    button.click();
                }
            }
        });
    </script>
</body>
</html>